name: Build and Release

on:
  push:
    branches: [ main, forge-1.20.1 ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, forge-1.20.1 ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    
    - name: Build with Gradle
      run: ./gradlew build
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: arcanecodex-artifacts
        path: build/libs/*.jar
    
    - name: Extract version
      id: extract_version
      run: |
        VERSION=$(grep "version" gradle.properties | cut -d'=' -f2 | tr -d ' ')
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "::set-output name=version::$VERSION"
    
    - name: Generate changelog
      id: changelog
      run: |
        echo "CHANGELOG<<EOF" >> $GITHUB_ENV
        git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 2>/dev/null || echo "")..HEAD >> $GITHUB_ENV
        echo "" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: build/libs/*.jar
        body: |
          # Arcane Codex ${{ steps.extract_version.outputs.version }}
          
          ## Changes in this release:
          ${{ env.CHANGELOG }}
          
          ## Installation
          1. Install Minecraft Forge 1.20.1
          2. Place the jar file in your mods folder
          3. Launch Minecraft
          
          ## Features
          - Quantum Energy System with 6 unique energy types
          - Consciousness expansion and augmentation
          - Research tree with memory fragments
          - Advanced machines and tools
          - Particle effects and visual feedback
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  auto-release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/forge-1.20.1' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Get next version
      id: get_version
      run: |
        # Get the latest tag
        LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
        # Extract version numbers
        VERSION=${LATEST_TAG#v}
        IFS='.' read -ra VERSION_PARTS <<< "$VERSION"
        MAJOR=${VERSION_PARTS[0]:-0}
        MINOR=${VERSION_PARTS[1]:-0}
        PATCH=${VERSION_PARTS[2]:-0}
        # Increment patch version
        PATCH=$((PATCH + 1))
        NEW_VERSION="v$MAJOR.$MINOR.$PATCH"
        echo "::set-output name=version::$NEW_VERSION"
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
    
    - name: Create tag
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git tag ${{ steps.get_version.outputs.version }}
        git push origin ${{ steps.get_version.outputs.version }}