name: Build and Release

on:
  push:
    branches: [ main, forge-1.20.1 ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Build with Gradle
      run: ./gradlew build
    
    - name: Extract version from gradle.properties
      id: extract_version
      run: |
        VERSION=$(grep "mod_version" gradle.properties | cut -d'=' -f2)
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Mod version: $VERSION"
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: arcanecodex-${{ steps.extract_version.outputs.VERSION }}
        path: build/libs/*.jar
    
    # Auto-tag and release on main branch pushes
    - name: Check if tag exists
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      id: check_tag
      run: |
        VERSION=${{ steps.extract_version.outputs.VERSION }}
        if git rev-parse "v$VERSION" >/dev/null 2>&1; then
          echo "TAG_EXISTS=true" >> $GITHUB_OUTPUT
        else
          echo "TAG_EXISTS=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Create and push tag
      if: github.ref == 'refs/heads/main' && github.event_name == 'push' && steps.check_tag.outputs.TAG_EXISTS == 'false'
      run: |
        VERSION=${{ steps.extract_version.outputs.VERSION }}
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git tag -a "v$VERSION" -m "Release v$VERSION"
        git push origin "v$VERSION"
    
    - name: Generate changelog
      if: startsWith(github.ref, 'refs/tags/v')
      id: changelog
      run: |
        echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
        git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: ncipollo/release-action@v1
      with:
        artifacts: "build/libs/*.jar"
        body: |
          ## Arcane Codex ${{ steps.extract_version.outputs.VERSION }}
          
          ### Changes
          ${{ steps.changelog.outputs.CHANGELOG }}
          
          ### Installation
          1. Ensure you have Minecraft Forge 1.20.1 installed
          2. Download the jar file below
          3. Place it in your mods folder
          
          ### Requirements
          - Minecraft 1.20.1
          - Minecraft Forge 47.2.0 or higher
          - Java 17
        draft: false
        prerelease: false
        allowUpdates: true
        token: ${{ secrets.GITHUB_TOKEN }}